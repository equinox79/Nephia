package Nephia::Setup;
use strict;
use warnings;
use File::Spec;
use Path::Class;
use Cwd;
use String::CamelCase qw( decamelize );

sub create {
    my ( $class ) = @_;

    my $approot = approot( $class );
    $approot->mkpath( 1, 0755 );
    map {
        $approot->subdir($_)->mkpath( 1, 0755 );
    } qw( lib etc view root );

    $approot->file('app.psgi')->spew(
        psgi_file( $class )
    );

    my @classpath = split(/::/, $class. '.pm');
    my $classfile = pop( @classpath );

    $approot->subdir('lib', @classpath)->mkpath( 1, 0755 ) if @classpath;
    push @classpath, $classfile;

    $approot->file('lib', @classpath)->spew(
        app_class_file( $class )
    );

    $approot->file('view', 'index.tx')->spew(
        index_template_file( $class )
    );
}

sub approot {
    my ( $class ) = @_;
    $class =~ s/::/-/g;
    return dir(
        File::Spec->catfile( 
            getcwd(),
            decamelize($class), 
        )
    );
}

sub psgi_file {
    my $class = shift;
    return <<EOF;
use strict;
use warnings;
use $class;
$class->run();
EOF
}

sub app_class_file {
    my $class = shift;
    return <<EOF;
package $class;
use strict;
use warnings;
use Nephia;

path '/' => sub {
    my \$req = shift;
    return {
        template => 'index.tx',
        title => '$class',
    };
};

1;
EOF
}

sub index_template_file {
    return <<EOF;
<html>
<head>
  <title><: \$title :> - powerd by Nephia</title>
</head>
<body>
  <h1><: \$title :></h1>
  <p>Generated by Nephia</p>
</body>
</html>
EOF
}

1;
